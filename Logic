// .NET Core C# - Uploading an Image Function

Version #1


Version #2
// Important to set as an 'Asynchronous' function
public async Task<IActionResult> Create(<Model Binding stuff so that we add data to model on POST>, <Create a reference to our target Model>) 
{
	if (ModelState.IsValid)
	{
		// define our wwwroot path
		// setup a Guid instance
		// define our filename without the extension
		// define our extension from the input file
		// append our Guid instance + filename + current datetime + extension
		// combine our 'wwwroot' path with '/images/'
		// combine our 'wwwroot/images/' path with our input file (filename)
		// begin using statement -> a var which instantiates a new FileStream session >>> pass in our 'wwwroot/images/<input_file>' and set in 'Create' mode
		// reference our Model's respective 'Image' column and add it by copying the filestream variable to our model
		// save the record
	}
}
 // Save to 'Image' to 'wwwroot/images'
string wwwRoot = _webHostEnvironment.WebRootPath;
// Define our GUID
Guid uniqueId = Guid.NewGuid();
// Fetch filename without the extension
string fileName = Path.GetFileNameWithoutExtension(model.Image.FileName);
// Fetch filename extension stored in IFormFile '.FileName()' method
string extension = Path.GetExtension(model.Image.FileName);
// Save as: '<guid>_<filename>_<current datetime>_<extension>'
model.PhotoName = uniqueId + "_" + fileName + "_" + DateTime.Now.ToString("yymmssfff") + "_" + extension;
// Combine our 'wwwroot' and '/images/' with our input file
string path = Path.Combine(wwwRoot + "/images/", fileName);
// Initialise a new FileStream session in 'Create' mode...
using (var fileStream = new FileStream(path, FileMode.Create))
{
    await model.Image.CopyToAsync(fileStream);
}
// Insert the new record
